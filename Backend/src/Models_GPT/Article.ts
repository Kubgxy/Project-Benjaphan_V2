import mongoose, { Schema, Document } from "mongoose";
import slugify from "slugify"; // ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á slug ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥

// TypeScript interface ‚Üí ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ type-safe ‡∏ù‡∏±‡πà‡∏á backend
export interface IArticle extends Document {
  title: string;
  slug: string;
  excerpt: string;
  content: string;
  thumbnail: string;
  contentImages?: string[];
  tags?: string[];
  category?: string;
  metaDescription?: string;
  author: mongoose.Types.ObjectId;
  views: number;
  isPublished: boolean;
  createdAt: Date;
  updatedAt: Date;
}

const ArticleSchema: Schema = new Schema(
  {
    title: { type: String, required: true },
    slug: { type: String, unique: true }, // slug ‡∏ï‡πâ‡∏≠‡∏á unique!
    excerpt: { type: String, required: true }, // summary ‡∏¢‡πà‡∏≠ (‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ list)
    content: { type: String, required: true }, // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏ï‡πá‡∏° (markdown, rich text)
    thumbnail: { type: String, required: true }, // main thumbnail
    contentImages: { type: [String], default: [] }, // ‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ (optional)
    tags: { type: [String], default: [] }, // array ‡∏Ç‡∏≠‡∏á tag
    category: { type: String }, // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    metaDescription: { type: String }, // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SEO
    author: { type: Schema.Types.ObjectId, ref: "User", required: true }, // ref ‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô
    views: { type: Number, default: 0 }, // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏π
    isPublished: { type: Boolean, default: false } // draft/published status
  },
  { timestamps: true, collection: "Articles" }
);

// üí° Pre-validate hook ‚Üí ‡∏™‡∏£‡πâ‡∏≤‡∏á slug ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å title
ArticleSchema.pre<IArticle>("validate", function (next) {
  if (!this.slug && this.title) {
    this.slug = slugify(this.title, { lower: true, strict: true });
  }
  next();
});

// üí° ‡πÄ‡∏û‡∏¥‡πà‡∏° index ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö query/filter ‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô
ArticleSchema.index({ tags: 1 });
ArticleSchema.index({ category: 1 });
ArticleSchema.index({ isPublished: 1 });
ArticleSchema.index({ createdAt: -1 }); // ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà-‡πÄ‡∏Å‡πà‡∏≤‡πÄ‡∏£‡πá‡∏ß

export default mongoose.model<IArticle>("Article", ArticleSchema);
