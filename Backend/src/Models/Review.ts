// import mongoose, { Schema, model, Document } from "mongoose";
// import { updateProductRating } from "../utils/updateProductRating";

// export interface IReview extends Document {
//   productId: mongoose.Types.ObjectId;  // üîó ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á Product ‡∏à‡∏£‡∏¥‡∏á
//   userId: mongoose.Types.ObjectId;     // üîê ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
//   rating: number;                      // ‚≠ê ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
//   comment: string;                     // üí¨ ‡∏Ñ‡∏≥‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
// }

// const reviewSchema = new Schema<IReview>(
//   {
//     productId: { type: Schema.Types.ObjectId, ref: "Product", required: true },
//     userId: { type: Schema.Types.ObjectId, ref: "User", required: true },
//     rating: { type: Number, required: true, min: 1, max: 5 },
//     comment: { type: String, required: false },
//   },
//   { collection: "Reviews", timestamps: true }
// );

// // ‚úÖ post-save: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á
// reviewSchema.post("save", async function (doc) {
//     await updateProductRating(doc.productId);
// });
  
// // ‚úÖ post-delete: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ñ‡∏π‡∏Å‡∏•‡∏ö
// reviewSchema.post("findOneAndDelete", async function (doc: any) {
//     if (doc) {
//         await updateProductRating(doc.productId);
//     }
// });

// const Review = model<IReview>("Review", reviewSchema);
// export default Review;
